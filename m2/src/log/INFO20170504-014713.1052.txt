Log file created at: 2017/05/04 01:47:13
Running on machine: CSZ220
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0504 01:47:13.937477 17280 caffe.cpp:218] Using GPUs 0
I0504 01:47:14.134949 17280 caffe.cpp:223] GPU 0: GeForce GTX 1070
I0504 01:47:14.432449 17280 solver.cpp:48] Initializing solver from parameters: 
test_iter: 1000
test_interval: 100
base_lr: 0.001
display: 50
max_iter: 40000
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 2500
snapshot: 50
snapshot_prefix: "../caffe_model/snapshot/model_transfer"
solver_mode: GPU
device_id: 0
net: "../caffe_model/train_val.prototxt"
train_state {
  level: 0
  stage: ""
}
I0504 01:47:14.433449 17280 solver.cpp:91] Creating training net from net file: ../caffe_model/train_val.prototxt
I0504 01:47:14.433949 17280 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer data
I0504 01:47:14.433949 17280 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0504 01:47:14.434448 17280 net.cpp:58] Initializing net from parameters: 
name: "CaffeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "../data/mean.binaryproto"
  }
  data_param {
    source: "../data/train_lmdb"
    batch_size: 256
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8-cats-dogs"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8-cats-dogs"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8-cats-dogs"
  bottom: "label"
  top: "loss"
}
I0504 01:47:14.435950 17280 layer_factory.hpp:77] Creating layer data
I0504 01:47:14.436449 17280 net.cpp:100] Creating Layer data
I0504 01:47:14.436449 17280 net.cpp:408] data -> data
I0504 01:47:14.437449 17280 net.cpp:408] data -> label
I0504 01:47:14.437948 17280 data_transformer.cpp:25] Loading mean file from: ../data/mean.binaryproto
I0504 01:47:14.437948  1172 db_lmdb.cpp:40] Opened lmdb ../data/train_lmdb
I0504 01:47:14.519979 17280 data_layer.cpp:41] output data size: 256,3,227,227
I0504 01:47:14.736171 17280 net.cpp:150] Setting up data
I0504 01:47:14.736642 17280 net.cpp:157] Top shape: 256 3 227 227 (39574272)
I0504 01:47:14.737146 17280 net.cpp:157] Top shape: 256 (256)
I0504 01:47:14.740124 17280 net.cpp:165] Memory required for data: 158298112
I0504 01:47:14.741125 17280 layer_factory.hpp:77] Creating layer conv1
I0504 01:47:14.741623 17280 net.cpp:100] Creating Layer conv1
I0504 01:47:14.741623 17280 net.cpp:434] conv1 <- data
I0504 01:47:14.742125 17280 net.cpp:408] conv1 -> conv1
I0504 01:47:15.131626 17280 net.cpp:150] Setting up conv1
I0504 01:47:15.131626 17280 net.cpp:157] Top shape: 256 96 55 55 (74342400)
I0504 01:47:15.132154 17280 net.cpp:165] Memory required for data: 455667712
I0504 01:47:15.132623 17280 layer_factory.hpp:77] Creating layer relu1
I0504 01:47:15.133123 17280 net.cpp:100] Creating Layer relu1
I0504 01:47:15.133625 17280 net.cpp:434] relu1 <- conv1
I0504 01:47:15.134150 17280 net.cpp:395] relu1 -> conv1 (in-place)
I0504 01:47:15.134624 17280 net.cpp:150] Setting up relu1
I0504 01:47:15.134624 17280 net.cpp:157] Top shape: 256 96 55 55 (74342400)
I0504 01:47:15.135124 17280 net.cpp:165] Memory required for data: 753037312
I0504 01:47:15.135624 17280 layer_factory.hpp:77] Creating layer pool1
I0504 01:47:15.135624 17280 net.cpp:100] Creating Layer pool1
I0504 01:47:15.136123 17280 net.cpp:434] pool1 <- conv1
I0504 01:47:15.136623 17280 net.cpp:408] pool1 -> pool1
I0504 01:47:15.137125 17280 net.cpp:150] Setting up pool1
I0504 01:47:15.137624 17280 net.cpp:157] Top shape: 256 96 27 27 (17915904)
I0504 01:47:15.138124 17280 net.cpp:165] Memory required for data: 824700928
I0504 01:47:15.138624 17280 layer_factory.hpp:77] Creating layer norm1
I0504 01:47:15.138624 17280 net.cpp:100] Creating Layer norm1
I0504 01:47:15.139125 17280 net.cpp:434] norm1 <- pool1
I0504 01:47:15.139623 17280 net.cpp:408] norm1 -> norm1
I0504 01:47:15.140625 17280 net.cpp:150] Setting up norm1
I0504 01:47:15.142125 17280 net.cpp:157] Top shape: 256 96 27 27 (17915904)
I0504 01:47:15.142125 17280 net.cpp:165] Memory required for data: 896364544
I0504 01:47:15.142623 17280 layer_factory.hpp:77] Creating layer conv2
I0504 01:47:15.143124 17280 net.cpp:100] Creating Layer conv2
I0504 01:47:15.143625 17280 net.cpp:434] conv2 <- norm1
I0504 01:47:15.143625 17280 net.cpp:408] conv2 -> conv2
I0504 01:47:15.149164 17280 net.cpp:150] Setting up conv2
I0504 01:47:15.149164 17280 net.cpp:157] Top shape: 256 256 27 27 (47775744)
I0504 01:47:15.149693 17280 net.cpp:165] Memory required for data: 1087467520
I0504 01:47:15.151162 17280 layer_factory.hpp:77] Creating layer relu2
I0504 01:47:15.151162 17280 net.cpp:100] Creating Layer relu2
I0504 01:47:15.153163 17280 net.cpp:434] relu2 <- conv2
I0504 01:47:15.153163 17280 net.cpp:395] relu2 -> conv2 (in-place)
I0504 01:47:15.154162 17280 net.cpp:150] Setting up relu2
I0504 01:47:15.154162 17280 net.cpp:157] Top shape: 256 256 27 27 (47775744)
I0504 01:47:15.154662 17280 net.cpp:165] Memory required for data: 1278570496
I0504 01:47:15.155163 17280 layer_factory.hpp:77] Creating layer pool2
I0504 01:47:15.155661 17280 net.cpp:100] Creating Layer pool2
I0504 01:47:15.155661 17280 net.cpp:434] pool2 <- conv2
I0504 01:47:15.156162 17280 net.cpp:408] pool2 -> pool2
I0504 01:47:15.156662 17280 net.cpp:150] Setting up pool2
I0504 01:47:15.156662 17280 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0504 01:47:15.157162 17280 net.cpp:165] Memory required for data: 1322872832
I0504 01:47:15.157662 17280 layer_factory.hpp:77] Creating layer norm2
I0504 01:47:15.158162 17280 net.cpp:100] Creating Layer norm2
I0504 01:47:15.158162 17280 net.cpp:434] norm2 <- pool2
I0504 01:47:15.158661 17280 net.cpp:408] norm2 -> norm2
I0504 01:47:15.159662 17280 net.cpp:150] Setting up norm2
I0504 01:47:15.159662 17280 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0504 01:47:15.159662 17280 net.cpp:165] Memory required for data: 1367175168
I0504 01:47:15.161125 17280 layer_factory.hpp:77] Creating layer conv3
I0504 01:47:15.163128 17280 net.cpp:100] Creating Layer conv3
I0504 01:47:15.163628 17280 net.cpp:434] conv3 <- norm2
I0504 01:47:15.163628 17280 net.cpp:408] conv3 -> conv3
I0504 01:47:15.174705 17280 net.cpp:150] Setting up conv3
I0504 01:47:15.175132 17280 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0504 01:47:15.176131 17280 net.cpp:165] Memory required for data: 1433628672
I0504 01:47:15.176823 17280 layer_factory.hpp:77] Creating layer relu3
I0504 01:47:15.177376 17280 net.cpp:100] Creating Layer relu3
I0504 01:47:15.177829 17280 net.cpp:434] relu3 <- conv3
I0504 01:47:15.178328 17280 net.cpp:395] relu3 -> conv3 (in-place)
I0504 01:47:15.179327 17280 net.cpp:150] Setting up relu3
I0504 01:47:15.181327 17280 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0504 01:47:15.181826 17280 net.cpp:165] Memory required for data: 1500082176
I0504 01:47:15.182327 17280 layer_factory.hpp:77] Creating layer conv4
I0504 01:47:15.182827 17280 net.cpp:100] Creating Layer conv4
I0504 01:47:15.183327 17280 net.cpp:434] conv4 <- conv3
I0504 01:47:15.183327 17280 net.cpp:408] conv4 -> conv4
I0504 01:47:15.193327 17280 net.cpp:150] Setting up conv4
I0504 01:47:15.193826 17280 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0504 01:47:15.194329 17280 net.cpp:165] Memory required for data: 1566535680
I0504 01:47:15.194826 17280 layer_factory.hpp:77] Creating layer relu4
I0504 01:47:15.194826 17280 net.cpp:100] Creating Layer relu4
I0504 01:47:15.195327 17280 net.cpp:434] relu4 <- conv4
I0504 01:47:15.195327 17280 net.cpp:395] relu4 -> conv4 (in-place)
I0504 01:47:15.195827 17280 net.cpp:150] Setting up relu4
I0504 01:47:15.196327 17280 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0504 01:47:15.196327 17280 net.cpp:165] Memory required for data: 1632989184
I0504 01:47:15.196827 17280 layer_factory.hpp:77] Creating layer conv5
I0504 01:47:15.196827 17280 net.cpp:100] Creating Layer conv5
I0504 01:47:15.197326 17280 net.cpp:434] conv5 <- conv4
I0504 01:47:15.197865 17280 net.cpp:408] conv5 -> conv5
I0504 01:47:15.205353 17280 net.cpp:150] Setting up conv5
I0504 01:47:15.205353 17280 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0504 01:47:15.206077 17280 net.cpp:165] Memory required for data: 1677291520
I0504 01:47:15.206077 17280 layer_factory.hpp:77] Creating layer relu5
I0504 01:47:15.206581 17280 net.cpp:100] Creating Layer relu5
I0504 01:47:15.207080 17280 net.cpp:434] relu5 <- conv5
I0504 01:47:15.207581 17280 net.cpp:395] relu5 -> conv5 (in-place)
I0504 01:47:15.208081 17280 net.cpp:150] Setting up relu5
I0504 01:47:15.208580 17280 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0504 01:47:15.209080 17280 net.cpp:165] Memory required for data: 1721593856
I0504 01:47:15.211722 17280 layer_factory.hpp:77] Creating layer pool5
I0504 01:47:15.211722 17280 net.cpp:100] Creating Layer pool5
I0504 01:47:15.212222 17280 net.cpp:434] pool5 <- conv5
I0504 01:47:15.212723 17280 net.cpp:408] pool5 -> pool5
I0504 01:47:15.213222 17280 net.cpp:150] Setting up pool5
I0504 01:47:15.213222 17280 net.cpp:157] Top shape: 256 256 6 6 (2359296)
I0504 01:47:15.213722 17280 net.cpp:165] Memory required for data: 1731031040
I0504 01:47:15.214222 17280 layer_factory.hpp:77] Creating layer fc6
I0504 01:47:15.214222 17280 net.cpp:100] Creating Layer fc6
I0504 01:47:15.214722 17280 net.cpp:434] fc6 <- pool5
I0504 01:47:15.214722 17280 net.cpp:408] fc6 -> fc6
I0504 01:47:15.539222 17280 net.cpp:150] Setting up fc6
I0504 01:47:15.539222 17280 net.cpp:157] Top shape: 256 4096 (1048576)
I0504 01:47:15.540163 17280 net.cpp:165] Memory required for data: 1735225344
I0504 01:47:15.540663 17280 layer_factory.hpp:77] Creating layer relu6
I0504 01:47:15.540663 17280 net.cpp:100] Creating Layer relu6
I0504 01:47:15.541162 17280 net.cpp:434] relu6 <- fc6
I0504 01:47:15.541663 17280 net.cpp:395] relu6 -> fc6 (in-place)
I0504 01:47:15.542661 17280 net.cpp:150] Setting up relu6
I0504 01:47:15.543162 17280 net.cpp:157] Top shape: 256 4096 (1048576)
I0504 01:47:15.543162 17280 net.cpp:165] Memory required for data: 1739419648
I0504 01:47:15.543661 17280 layer_factory.hpp:77] Creating layer drop6
I0504 01:47:15.544162 17280 net.cpp:100] Creating Layer drop6
I0504 01:47:15.544661 17280 net.cpp:434] drop6 <- fc6
I0504 01:47:15.545161 17280 net.cpp:395] drop6 -> fc6 (in-place)
I0504 01:47:15.545662 17280 net.cpp:150] Setting up drop6
I0504 01:47:15.545662 17280 net.cpp:157] Top shape: 256 4096 (1048576)
I0504 01:47:15.546161 17280 net.cpp:165] Memory required for data: 1743613952
I0504 01:47:15.546661 17280 layer_factory.hpp:77] Creating layer fc7
I0504 01:47:15.547161 17280 net.cpp:100] Creating Layer fc7
I0504 01:47:15.547832 17280 net.cpp:434] fc7 <- fc6
I0504 01:47:15.548161 17280 net.cpp:408] fc7 -> fc7
I0504 01:47:15.694162 17280 net.cpp:150] Setting up fc7
I0504 01:47:15.694162 17280 net.cpp:157] Top shape: 256 4096 (1048576)
I0504 01:47:15.695161 17280 net.cpp:165] Memory required for data: 1747808256
I0504 01:47:15.695662 17280 layer_factory.hpp:77] Creating layer relu7
I0504 01:47:15.696161 17280 net.cpp:100] Creating Layer relu7
I0504 01:47:15.696161 17280 net.cpp:434] relu7 <- fc7
I0504 01:47:15.696661 17280 net.cpp:395] relu7 -> fc7 (in-place)
I0504 01:47:15.697793 17280 net.cpp:150] Setting up relu7
I0504 01:47:15.697793 17280 net.cpp:157] Top shape: 256 4096 (1048576)
I0504 01:47:15.698161 17280 net.cpp:165] Memory required for data: 1752002560
I0504 01:47:15.698161 17280 layer_factory.hpp:77] Creating layer drop7
I0504 01:47:15.698662 17280 net.cpp:100] Creating Layer drop7
I0504 01:47:15.699162 17280 net.cpp:434] drop7 <- fc7
I0504 01:47:15.699661 17280 net.cpp:395] drop7 -> fc7 (in-place)
I0504 01:47:15.699661 17280 net.cpp:150] Setting up drop7
I0504 01:47:15.700161 17280 net.cpp:157] Top shape: 256 4096 (1048576)
I0504 01:47:15.700661 17280 net.cpp:165] Memory required for data: 1756196864
I0504 01:47:15.701161 17280 layer_factory.hpp:77] Creating layer fc8-cats-dogs
I0504 01:47:15.701161 17280 net.cpp:100] Creating Layer fc8-cats-dogs
I0504 01:47:15.701161 17280 net.cpp:434] fc8-cats-dogs <- fc7
I0504 01:47:15.701661 17280 net.cpp:408] fc8-cats-dogs -> fc8-cats-dogs
I0504 01:47:15.703166 17280 net.cpp:150] Setting up fc8-cats-dogs
I0504 01:47:15.704192 17280 net.cpp:157] Top shape: 256 2 (512)
I0504 01:47:15.704663 17280 net.cpp:165] Memory required for data: 1756198912
I0504 01:47:15.705162 17280 layer_factory.hpp:77] Creating layer loss
I0504 01:47:15.705162 17280 net.cpp:100] Creating Layer loss
I0504 01:47:15.705662 17280 net.cpp:434] loss <- fc8-cats-dogs
I0504 01:47:15.706162 17280 net.cpp:434] loss <- label
I0504 01:47:15.706691 17280 net.cpp:408] loss -> loss
I0504 01:47:15.707164 17280 layer_factory.hpp:77] Creating layer loss
I0504 01:47:15.707662 17280 net.cpp:150] Setting up loss
I0504 01:47:15.707662 17280 net.cpp:157] Top shape: (1)
I0504 01:47:15.708161 17280 net.cpp:160]     with loss weight 1
I0504 01:47:15.708662 17280 net.cpp:165] Memory required for data: 1756198916
I0504 01:47:15.709162 17280 net.cpp:226] loss needs backward computation.
I0504 01:47:15.710662 17280 net.cpp:226] fc8-cats-dogs needs backward computation.
I0504 01:47:15.711161 17280 net.cpp:226] drop7 needs backward computation.
I0504 01:47:15.711661 17280 net.cpp:226] relu7 needs backward computation.
I0504 01:47:15.712162 17280 net.cpp:226] fc7 needs backward computation.
I0504 01:47:15.713662 17280 net.cpp:226] drop6 needs backward computation.
I0504 01:47:15.714161 17280 net.cpp:226] relu6 needs backward computation.
I0504 01:47:15.714661 17280 net.cpp:226] fc6 needs backward computation.
I0504 01:47:15.715162 17280 net.cpp:226] pool5 needs backward computation.
I0504 01:47:15.715662 17280 net.cpp:226] relu5 needs backward computation.
I0504 01:47:15.715662 17280 net.cpp:226] conv5 needs backward computation.
I0504 01:47:15.716161 17280 net.cpp:226] relu4 needs backward computation.
I0504 01:47:15.716161 17280 net.cpp:226] conv4 needs backward computation.
I0504 01:47:15.716662 17280 net.cpp:226] relu3 needs backward computation.
I0504 01:47:15.716662 17280 net.cpp:226] conv3 needs backward computation.
I0504 01:47:15.716662 17280 net.cpp:226] norm2 needs backward computation.
I0504 01:47:15.717161 17280 net.cpp:226] pool2 needs backward computation.
I0504 01:47:15.717161 17280 net.cpp:226] relu2 needs backward computation.
I0504 01:47:15.717661 17280 net.cpp:226] conv2 needs backward computation.
I0504 01:47:15.717661 17280 net.cpp:226] norm1 needs backward computation.
I0504 01:47:15.718163 17280 net.cpp:226] pool1 needs backward computation.
I0504 01:47:15.718163 17280 net.cpp:226] relu1 needs backward computation.
I0504 01:47:15.718662 17280 net.cpp:226] conv1 needs backward computation.
I0504 01:47:15.718662 17280 net.cpp:228] data does not need backward computation.
I0504 01:47:15.718662 17280 net.cpp:270] This network produces output loss
I0504 01:47:15.719161 17280 net.cpp:283] Network initialization done.
I0504 01:47:15.720161 17280 solver.cpp:181] Creating test net (#0) specified by net file: ../caffe_model/train_val.prototxt
I0504 01:47:15.720161 17280 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0504 01:47:15.720661 17280 net.cpp:58] Initializing net from parameters: 
name: "CaffeNet"
state {
  phase: TEST
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "../data/mean.binaryproto"
  }
  data_param {
    source: "../data/train_lmdb"
    batch_size: 50
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8-cats-dogs"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8-cats-dogs"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8-cats-dogs"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8-cats-dogs"
  bottom: "label"
  top: "loss"
}
I0504 01:47:15.721690 17280 layer_factory.hpp:77] Creating layer data
I0504 01:47:15.722162 17280 net.cpp:100] Creating Layer data
I0504 01:47:15.724191 17280 net.cpp:408] data -> data
I0504 01:47:15.724663 17280 net.cpp:408] data -> label
I0504 01:47:15.725162 17280 data_transformer.cpp:25] Loading mean file from: ../data/mean.binaryproto
